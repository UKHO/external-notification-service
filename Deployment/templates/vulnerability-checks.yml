jobs:
- job: Snyk
  displayName: Run Snyk security scans
  pool: $(WindowsPool)
  steps:
  - task: UseDotNet@2
    displayName: Use .NET SDK $(DotNetSdkVersion)
    inputs:
      packageType: sdk
      version: $(DotNetSdkVersion)

  - task: DotNetCoreCLI@2
    displayName: .NET - NuGet restore
    inputs:
      command: restore
      projects: |
        **/*.csproj
      feedsToUse: config
      noCache: true
      nugetConfigPath: '$(Build.SourcesDirectory)\BuildNuget.config'
      workingDirectory: '$(Build.SourcesDirectory)\UKHO.ExternalNotificationService.API'

  - task: UkhoSnykScanTask@0
    displayName: Snyk IaC scan
    inputs:
      failOnIssues: true
      failOnThreshold: high
      organization: $(snykAbzuOrganizationId)
      serviceConnectionEndpoint: Snyk
      severityThreshold: low
      testType: iac
      monitorwhen: never

  - task: UkhoSnykScanTask@0
    displayName: Snyk SAST scan
    condition: succeededOrFailed()
    inputs:
      failOnIssues: true
      failOnThreshold: high
      organization: $(snykAbzuOrganizationId)
      serviceConnectionEndpoint: Snyk
      codeSeverityThreshold: low
      testType: code
      monitorwhen: never

  - task: UkhoSnykScanTask@0
    displayName: Snyk SCA scan
    condition: succeededOrFailed()
    inputs:
      failOnIssues: true
      failOnThreshold: high
      organization: $(snykAbzuOrganizationId)
      serviceConnectionEndpoint: Snyk
      codeSeverityThreshold: low
      testType: app
      monitorwhen: never
      severityThreshold: low
      additionalArguments: --all-projects

  - task: PublishPipelineArtifact@1
    displayName: Publish Snyk scan results
    condition: succeededOrFailed()
    inputs:
      targetPath: '$(Agent.TempDirectory)'
      artifact: Snyk_Scan
      publishLocation: pipeline
