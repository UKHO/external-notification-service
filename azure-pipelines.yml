name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yy)$(DayOfYear).$(BuildCounter)

parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    displayName: "Continue even if resources are getting destroyed"
    type: boolean
    default: false

  - name: DisableDependencyCheck
    displayName: "Disable OWASP dependency checking"
    type: boolean
    default: false

trigger:
  - main
  - release/*
  - develop

schedules:
- cron: "0 4 * * 1"
  displayName: "Weekly NVD Check Build"
  branches:
    include:
    - main
  always: true

pool: 
    name: NautilusBuild
    demands: vs_16 -equals 1 #exclude agents 13 and 14 as code coverage report fails

variables:
  - name: BuildConfiguration
    value: "release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UKHOAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UKHOAssemblyVersionPrefix
    value: "1.0."
  - name: UKHOAssemblyProduct
    value: "External Notification Service"
  - name: UKHOAssemblyCopyright
    value: "Copyright Â© UK Hydrographic Office"
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell-unzip:1.7.2"
  - name: DeploymentPool
    value: "Mare Nectaris"
  - name: WindowPool
    value: "NautilusBuild"

stages:
  - stage: PERFORM_DEPENDENCYCHECK_DOTNETBUILD_DOTNETTEST_AND_PUBLISH
    displayName: "Build (inc DependencyChecker, Dotnet Build , dotnet test and publish artifact )"
    dependsOn: []
    jobs:
      - job: PublishFunctionalTestsAndTerraform
        workspace:
          clean: all
        displayName: "Publish Functional Tests And Terraform"
        steps:
          - task: CopyFiles@2
            displayName: "Copy OpenAPI spec for deployment"
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'external-notification-service.openApi.yaml'
              TargetFolder: '$(Build.SourcesDirectory)\Deployment\src\APIM'

          - task: PublishBuildArtifacts@1
            displayName: "Publish terraform Artifacts"
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\Deployment'
              ArtifactName: terraformartifact

  - stage: Devdeploy
    displayName: "Devdeploy (inc terraform, webapp deploy)"
    jobs:
      - deployment: DevDeployApp
        displayName: "Dev - deploy terraform and dotnet App"
        environment: "Ens-Dev"
        pool: $(DeploymentPool)
        container: ${{variables.Container}}
        workspace:
          clean: all
        variables:
          - group: "ENS-Dev-TF-Variables"
          - group: "ENS-Dev-Variables"
          - group: "ENS-Dev-APIM-SOLAS-Variables"
          - name: "D365AuthConfiguration.TenantId"
            value: $(EXTERNAL-NOTIFICATION-SERVICE-APIM-CLIENT-TENANT-ID)
          - name: "D365AuthConfiguration.ClientId"
            value: $(EXTERNAL-NOTIFICATION-SERVICE-APIM-CLIENT-CLIENT-ID)
          - name: "D365AuthConfiguration.ClientSecret"
            value: $(EXTERNAL-NOTIFICATION-SERVICE-APIM-CLIENT-SECRET-VALUE)
          - name: "EnsAuthConfiguration.ClientId"
            value: $(EXTERNAL-NOTIFICATION-SERVICE-APP-REGISTRATION-CLIENT-ID)
          - name: "EnsAuthConfiguration.TenantId"
            value: $(EXTERNAL-NOTIFICATION-SERVICE-APP-REGISTRATION-TENANT-ID)
          - name: "ElasticAPM.ApiKey"
            value: $(elasticAPM-ApiKey)
          - name: "ElasticAPM.Environment"
            value: $(elasticAPM-Environment)
          - name: "ElasticAPM.ServerURL"
            value: $(elasticAPM-ServerURL)
          - name: "ElasticAPM.ServiceName"
            value: $(elasticAPM-ServiceName)
          - name: "ElasticAPM.WebJobServiceName"
            value: $(elasticAPM-WebJobServiceName)
        strategy:
          runOnce:
            deploy:
              steps:
                # - template: Deployment/templates/continuous-deployment-apim.yml
                #   parameters:
                #     ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
                #     AzureSubscription: "UKHO-APIM-Dev"
                #     TerraformKeyVault: $(APIM_TERRAFORM_KEYVAULT)
                #     APIMResourceGroup: $(APIM_RESOURCE_GROUP_NAME)
                #     APIMServiceInstance: $(APIM_SERVICE_NAME)
                #     tfstateStorageAccountRG: $(APIM_TFSTATE_STORAGE_ACCOUNT_RG)
                #     tfstateStorageAccountName: $(APIM_TFSTATE_STORAGE_ACCOUNT_NAME)
                #     NamePrefix: "Old"

                - template: Deployment/templates/continuous-deployment-apim.yml
                  parameters:
                    ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
                    AzureSubscription: "UKHO-APIM-SOLAS-NonLive"
                    TerraformKeyVault: $(APIM_SOLAS_TERRAFORM_KEYVAULT)
                    APIMResourceGroup: $(APIM_SOLAS_RESOURCE_GROUP_NAME)
                    APIMServiceInstance: $(APIM_SOLAS_SERVICE_NAME)
                    tfstateStorageAccountRG: $(APIM_SOLAS_RESOURCE_GROUP_NAME)
                    tfstateStorageAccountName: $(APIM_SOLAS_TFSTATE_STORAGE_ACCOUNT_NAME)
                    NamePrefix: "New"
