name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yy)$(DayOfYear).$(BuildCounter)

parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    displayName: "Continue even if resources are getting destroyed"
    type: boolean
    default: false

trigger:
  - main
  - release/*

pool: NautilusBuild

variables:
  - name: BuildConfiguration
    value: "release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UKHOAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UKHOAssemblyVersionPrefix
    value: "1.0."
  - name: UKHOAssemblyProduct
    value: "Exchange Set Service"
  - name: UKHOAssemblyCopyright
    value: "Copyright © UK Hydrographic Office"
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell-unzip:0.14.9"
  - name: DeploymentPool
    value: "UKHO Ubuntu 1804"

stages:
  - stage: PERFORM_DEPENDENCYCHECK_DOTNETBUILD_DOTNETTEST_AND_PUBLISH
    displayName: "Build (inc DependencyChecker, Dotnet Build , dotnet test and publish artifact )"
    jobs:
      - job: Dependencychecker
        workspace:
          clean: all
        displayName: "Dependencychecker"
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET Core 6.0.x sdk'
            inputs:
              packageType: sdk
              useGlobalJson: true
              workingDirectory: '$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API'

          - task: DotNetCoreCLI@2
            displayName: ".Net Core - NuGet restore non test projects only"
            inputs:
              command: "restore"
              projects: |
                **/*.csproj
                !**/*Tests.csproj
              feedsToUse: config
              noCache: true
              nugetConfigPath: '$(Build.SourcesDirectory)\BuildNuget.config'
              workingDirectory: '$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API'
              packagesDirectory: '$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API\packages'

          - task: CmdLine@1
            displayName: "Run OWASP Dependency Checker"
            inputs:
              filename: 'dependency-check.bat'
              arguments: '--project "External-Notification-Service - $(Build.SourceBranchName)" --scan "$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API" --out "$(Build.ArtifactStagingDirectory)\DCReport" --suppression $(Build.SourcesDirectory)\NVDSuppressions.xml --noupdate'

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact: OWASP Dependency Checker Report"
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\DCReport'
              ArtifactName: "OWASP Dependency Checker Report"

          - task: PowerShell@1
            displayName: "Fail Build if Dependency Check Finds Any Vulnerabilities"
            inputs:
              scriptType: inlineScript
              arguments: '-ReportLocation $(Build.ArtifactStagingDirectory)\DCReport\*'
              inlineScript: |
                param($ReportLocation)
                Invoke-VulnerabilityCheck -ReportLocation $ReportLocation

      - job: BuildAndPublishAPI
        workspace:
          clean: all
        displayName: "Dotnet Build publish API"
        steps:
          - task: PowerShell@2
            displayName: "Set assembly version numbers based on build ID"
            inputs:
              targetType: filePath
              filePath: '$(Build.SourcesDirectory)\Apply-AssemblyVersionAndDefaults.ps1'
              arguments: '-buildNumber "$(Build.BuildNumber)" -solutionDirectory "$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API\" -UKHOAssemblyCompany "$env:UKHOAssemblyCompany" -UKHOAssemblyCopyright "$(UKHOAssemblyCopyright)" -UKHOAssemblyVersionPrefix "$env:UKHOAssemblyVersionPrefix" -UKHOAssemblyProduct "$env:UKHOAssemblyProduct"'

          - task: UseDotNet@2
            displayName: 'Use .NET Core 6.0.x sdk'
            inputs:
              packageType: sdk
              useGlobalJson: true
              workingDirectory: '$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API'

          - task: DotNetCoreCLI@2
            displayName: ".Net Core - NuGet restore"
            inputs:
              command: restore
              projects: |
                **/*.csproj
              feedsToUse: config
              noCache: true
              nugetConfigPath: '$(Build.SourcesDirectory)\BuildNuget.config'
              workingDirectory: '$(Build.SourcesDirectory)\UKHO.ExternalNotifcationService.API'

          - task: DotNetCoreCLI@2
            displayName: "dotnet build task"
            inputs:
              command: "build"
              projects: "**/*.csproj"
              arguments: '--configuration $(BuildConfiguration) --output $(Build.BinariesDirectory)'

          - task: DotNetCoreCLI@2
            displayName: "Publish WebAPI"
            inputs:
              command: "publish"
              publishWebProjects: false
              projects: '**/*UKHO.ExternalNotifcationService.API.csproj'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)\ExternalNotificationServiceWebAPI'
              zipAfterPublish: true
              modifyOutputPath: true

          - task: PublishBuildArtifacts@1
            displayName: "Publish WebAPI Artifact"
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\ExternalNotificationServiceWebAPI'
              ArtifactName: ExternalNotificationServiceWebAPI
